// Generated by gencpp from file state_machine/Command.msg
// DO NOT EDIT!


#ifndef STATE_MACHINE_MESSAGE_COMMAND_H
#define STATE_MACHINE_MESSAGE_COMMAND_H

#include <ros/service_traits.h>


#include <state_machine/CommandRequest.h>
#include <state_machine/CommandResponse.h>


namespace state_machine
{

struct Command
{

typedef CommandRequest Request;
typedef CommandResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Command
} // namespace state_machine


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::state_machine::Command > {
  static const char* value()
  {
    return "fe45b9e717d330ed9d4cfc701593d88f";
  }

  static const char* value(const ::state_machine::Command&) { return value(); }
};

template<>
struct DataType< ::state_machine::Command > {
  static const char* value()
  {
    return "state_machine/Command";
  }

  static const char* value(const ::state_machine::Command&) { return value(); }
};


// service_traits::MD5Sum< ::state_machine::CommandRequest> should match
// service_traits::MD5Sum< ::state_machine::Command >
template<>
struct MD5Sum< ::state_machine::CommandRequest>
{
  static const char* value()
  {
    return MD5Sum< ::state_machine::Command >::value();
  }
  static const char* value(const ::state_machine::CommandRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::state_machine::CommandRequest> should match
// service_traits::DataType< ::state_machine::Command >
template<>
struct DataType< ::state_machine::CommandRequest>
{
  static const char* value()
  {
    return DataType< ::state_machine::Command >::value();
  }
  static const char* value(const ::state_machine::CommandRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::state_machine::CommandResponse> should match
// service_traits::MD5Sum< ::state_machine::Command >
template<>
struct MD5Sum< ::state_machine::CommandResponse>
{
  static const char* value()
  {
    return MD5Sum< ::state_machine::Command >::value();
  }
  static const char* value(const ::state_machine::CommandResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::state_machine::CommandResponse> should match
// service_traits::DataType< ::state_machine::Command >
template<>
struct DataType< ::state_machine::CommandResponse>
{
  static const char* value()
  {
    return DataType< ::state_machine::Command >::value();
  }
  static const char* value(const ::state_machine::CommandResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // STATE_MACHINE_MESSAGE_COMMAND_H
